package seguranca;

import java.math.BigInteger;
import java.security.MessageDigest;
import java.sql.*;
import java.util.*;

import javax.xml.ws.WebServiceContext;
import javax.xml.ws.handler.MessageContext;

import sisrh.banco.Banco;
import sisrh.exception.SISRHException;


public class Autenticador {

	@SuppressWarnings("rawtypes")
	public static boolean autenticarUsuarioSenha(WebServiceContext context) throws Exception {
		MessageContext messageContext = context.getMessageContext();
		Map httpHeaders = (Map) messageContext.get(messageContext.HTTP_REQUEST_HEADERS);
		
		if (!httpHeaders.containsKey("usuario")) {
			throw new SISRHException("Informe o usuário");
		}
		
		if (!httpHeaders.containsKey("senha")) {
			throw new SISRHException("Informe a senha");
		}
		
		String usuario = ((List) httpHeaders.get("usuario")).get(0).toString();
		String senha = ((List) httpHeaders.get("senha")).get(0).toString();
		
		if (!autenticarUsuarioSenha(usuario, senha)) {
			throw new SISRHException("Usuário e senha inválidos");
		}
		
		return true;
	}


	@SuppressWarnings("rawtypes")
	public static String getUsuario(WebServiceContext context) throws Exception {
		MessageContext messageContext = context.getMessageContext();
		Map httpHeaders = (Map) messageContext.get(messageContext.HTTP_REQUEST_HEADERS);
		
		return ((List) httpHeaders.get("usuario")).get(0).toString();
	}

}





